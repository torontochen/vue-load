type User {
  _id: ID!
  username: String! @unique
  email: String!
  password: String!
  avatar: String
  joinDate: String
}

type Pic {
  _id: ID!
  title: String!
  imageId: ID
  imageBase64: String!
  imageFilename: String!
  createdBy: User
  createdDate: String
}

type Token {
  token: String!
}

type File {
  id: ID!
  filename: String!
  mimetype: String!
  encoding: String!
}

type FileDir {
  fileDir: String
}

type Query {
  getCurrentUser: User
  getPics: [Pic]
}

type Mutation {
  signupUser(username: String!, password: String!, email: String!): Token
  signinUser(username: String!, password: String!): Token
  addPic(
    title: String!
    imageId: ID
    imageFilename: String!
    creatorId: ID!
    imageBase64: String!
  ): Pic!
  deletePic(picId: ID!, username: String!): Pic
  uploadImage(file: Upload!, username: String!): File
  downloadImage(filename: String!, username: String!): FileDir!
}

type Subscription {
  picAdded: Pic!
  picDeleted: Pic!
}
